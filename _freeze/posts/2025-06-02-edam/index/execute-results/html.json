{
  "hash": "02982a351fe644e494d9caaf8c685f06",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Tagging Bioconductor packages with EDAM\"\ndescription: |\n  Adopting formal ontology for labeling Bioconductor software and data\nauthor:\n  - name: Vince Carey\n    url: https://vjcitn.github.io/\n    orcid: 0000-0003-4046-0063\ndate: 2025-06-02\ncreative_commons: CC BY\ncategories:\n  - bioconductor-evolution\n  - ontology\n  - biocViews\n  - EDAM\n  - education\nbibliography: \"ctv.bib\"\n---\n\n\n\n\n\n# Introduction\n\nEDAM stands for \"Embrace Data and Methods\". The [EDAM ontology](https://edamontology.org) is used\nto provide conceptual organization of resources\nin major initiatives like [ELIXIR bio.tools](https://bio.tools/) and [Galaxy](https://f1000research.com/posters/6-1032).  \n\nBioconductor's methods and\ndata are tagged using an ad hoc terminologic hierarchy called [biocViews](https://www.bioconductor.org/packages/release/bioc/html/biocViews.html).\n\nIn 2023 a proposal to enhance discoverability of Bioconductor resources through\ncollaboration with EDAM's ontology developers\nwas funded through the Chan-Zuckerberg Initiative Essential Open Source Software\nprogram.  This blog post gives an update on the project.\n\n# \"Task views\", starting with CRAN\n\n[CRAN task views](https://cran.r-project.org/web/views) are a bonanza for practicing\ndata scientists.  Introduced in 2005, \"[t]hey provide guidance about which CRAN packages \nare relevant for tasks related to a certain topic, and can also facilitate automatic \ninstallation of all corresponding packages (<a id='cite-ctvarx'></a><a href='#bib-ctvarx'>Zeileis et al. (2023)</a>).\n\n### Exploring CRAN task views\n\nBut what is a \"task view\", and how can a task view do so much?  The current content\nstack for CRAN task views lives in a [GitHub organization](https://github.com/cran-task-views).\nThe [ctv package](https://github.com/cran-task-views/ctv/) interrogates the\nview collection so that we can compute \n  \n- the number of views \non 2025-05-27 to be 48,\n- a random\nsample of view names (Survival, ExperimentalDesign, Databases, Omics, MachineLearning),\nand \n- the average number of packages per view (122.2).\n\n### Subviews\n\n\nEach view is curated by a team and a narrative web page is compiled to\nHTML.  We use [rvest](https://rvest.tidyverse.org/) to identify subtopics\nof the Omics view: \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rvest)\nread_html(\"https://cran.r-project.org/web/views/Omics.html\") |> \n  html_elements(\"h3\") |> html_text()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Annotation and databases\"    \"Genomics\"                   \n [3] \"Transcriptomics\"             \"Proteomics\"                 \n [5] \"Metabolomics\"                \"Other omics\"                \n [7] \"Multiple omics\"              \"Specific tasks\"             \n [9] \"Specific application fields\" \"CRAN packages\"              \n[11] \"Related links\"               \"Other resources\"            \n```\n\n\n:::\n:::\n\n\nThis approach can be used to learn the subtopics of any task view.\n\n### Upshots\n\nCRAN task views provide a vocabulary for organizing software packages\nfor data science, narrations of tasks addressed by various\npackages, mechanisms for tagging packages for discovery through\nview search, and protocols for adding new views and for adding\nnew packages to existing views.  See \n<a href='#bib-ctvarx'>Zeileis et al. (2023)</a> for full details.\n\nOf note: while CRAN hosts over 22,000 software packages, \nthe number of packages assigned to some view at this time\nis 4908. \n\n# biocViews: a graph is all you get\n\nThe [biocViews](https://bioconductor.org/packages/biocViews)\nhas a badge indicating that it has been in Bioconductor for 19\nyears.  Briefly, the intent was to emulate CRAN task views,\nwith a vocabulary and curation of packages\nusing topics relevant to genomic\ndata science.  Figure 1 gives a basic idea of the vocabulary\nand its structure.  There are 497 terms in a directed\ngraph with root \"BiocViews\".\n\n![Figure 1.  A \"dot\" layout of 20 nodes from the biocViewsVocab graph.](bcv20.png)\n \n\n\n\n\n\n\nThe mapping from biocViews terms to packages is specified in each\npackage's DESCRIPTION file.  For a given release of Bioconductor,\nthe [BiocPkgTools](https://bioconductor.org/packages/BiocPkgTools)\nincludes the mapping from each package to the list of biocViews terms chosen by the package\ndeveloper to characterize package capabilities.  All packages\nmap to at least one term.  The average number of terms for\nsoftware packages is 9, and the maximum number of terms in use\nfor any package is 45, for [roastgsa](https://bioconductor.org/packages/roastgsa).\n\n### Exploring biocViews\n\nAn R package, [biocEDAM](https://github.com/vjcitn/biocEDAM), under development\nin GitHub, provides a shiny app for comprehensive exploration of\nthe biocViews vocabulary and its mapping to Bioconductor software,\nannotation, experiment, and workflow packages.\nFigure 2 provides a screenshot.  The app is available\nfor general use at [shinyapps.io](https://vjcitn.shinyapps.io/bvbrowse).\n\n![Figure 2.  A view of the bvbrowse app with focus on packages mapped\nto the biocViews term \"DifferentialSplicing\", which\nis a kind of \"BiologicalQuestion\".](bvbr.png)\n\n### Upshots\n\nMotivated by CRAN task views, the biocViews vocabulary is deeply\nentrenched in Bioconductor's operations.  Every package maps\nto at least one term.  The mappings\ngiven in DESCRIPTION files are used to sort contributions into\nSoftware, Annotation, Experiment and Workflow classes.\n\nFigure 2 shows the family of \"biological questions\"\naddressed in the vocabulary.  This subvocabulary was\ncreated in an _ad hoc_ matter, by request or perceived need.  The\nmost recent additions to the vocabulary appear to have\nbeen made in 2023, involving the terms LongRead,\nWorkflowManagement, and [Salmo_salar](https://github.com/Bioconductor/Organism.dplyr/issues/18).\n\nUnfortunately, the original motivation of producing\ncurated and narrated topic-level documents in the manner of\nCRAN task views, was never achieved.\n\n# EDAM: Formal ontology for bioinformatics\n\n## Views of the EDAM conceptual hierarchy\n\nFrom [edamontology.org](https://edamontology.org):\n\n> EDAM is a comprehensive ontology of well-established, familiar concepts that \nare prevalent within scientific data analysis and data management (both within \nand beyond life sciences and imaging). EDAM includes topics, operations, \ntypes of data and data identifiers, and data formats.\n\nA taste of the conceptual network is given in Figure 3.  Visit [the data node](https://edamontology.github.io/edam-browser/#data_0006) to explore data types enumerated in the system.\n\n![Figure 3.  A snapshot of an expansion of the interactive network viewer for EDAM.](edamslice.png)\n\n## Comparing biocViews and EDAM\n\nIt is natural to expect that natural language processing tools would\nhelp identify correspondences between the biocViews vocabulary and EDAM.\nWe used the text2term system <a id='cite-gon2024'></a><a href='#bib-gon2024'>Gon√ßalves et al. (2024)</a> to help identify\npotential matches of terms using lexical and semantic analysis.\nFigure 4 gives a slice of the outcome of this approach.  The top 3 scoring\nterms in EDAM are provided for each term in biocViews.\n\n![Figure 4.  Application of text2term to biocViews for scoring matches to the EDAM ontology.](sheetBiocVIews2EDAM.png)\n\nThe interpretation of this analysis is ongoing.  Figure 4 shows, for example, that the\nbiocViews term \"SingleCell\" can be mapped to topic, operation, data concepts in EDAM.\nThe biocViews term seems intended to address single cell sequencing, and perhaps it\nshould be replaced by EDAM topic 4028.  It is not clear that an adjudication and\nreplacement process of this sort could scale over the whole biocViews vocabulary,\nbut some direct or very near matches are observed.\n\n## Using large language model methods to tag package content\n\nThanks to code and data made available by Anh Nguyet Vu of Sage Bionetworks, the\n[biocEDAM R package](https://vjcitn.github.io/biocEDAM) (under development) can\nuse gpt-4o to produce EDAM term assignments for Bioconductor packages.  The current\nprocess has two steps.  The function `vig2data` processes HTML or PDF vignettes,\nand uses the [`extract_data`](https://ellmer.tidyverse.org/news/index.html#ellmer-010) \nfeature of `ellmer::chat_openai` to produce a fixed-length summary.  This\nsummary is then analyzed against schemas for the four main concepts of EDAM: topic,\nformat, operation, data, using specific prompting for extraction of relevant concepts\n\"as specifically as possible\".\n\nFigure 5 provides the output of this approach for the [development vignette](https://www.bioconductor.org/packages/release/bioc/vignettes/MSnbase/inst/doc/v05-MSnbase-development.html) of the MSnbase package,\nwhich describes data types for analyzing mass spectrometry data.\n\n![Figure 5.  EDAM terms for the MSnbase package, based on gpt-4o analysis of a vignette for the package \nthat describes how data classes of the package are structured.](edamizeMSnbase.png)\n\n# Summary\n\nThis project began with the notion that an _ad hoc_ enumeration of concepts used to\ntag Bioconductor packages (biocViews) could be \"replaced\" with a more systematic ontology (EDAM).\nIt turns out that biocViews has purposes beyond package \"tagging\" for discovery support, and\nmodifications to the vocabulary have ramifications in other domains of the Bioconductor\nsoftware ecosystem.  It is also clear that EDAM \"lacks\" concepts that are used in biocViews,\nand will need to be updated.  This is a formal process requiring review and consensus among\nEDAM maintainers.  See this [pull request](https://github.com/edamontology/edamontology/pull/916)\nfor an example arising from this project.\n\nUltimately we believe that tooling related to that provided in the biocEDAM package\nwill help propose term assignments for Bioconductor packages (and other artifacts\nuseful in genomic data science) that developers and content creators can \nadopt as they see fit.  This will lead to gains in resource discoverability and\nwill provide values for organizing ecosystems and workflow collections like\nBioconductor and bio.tools.\n\n# References\n\n\n\n<p><cite><a id='bib-gon2024'></a><a href=\"#cite-gon2024\">Gon√ßalves, R. S. et al.</a>\n(2024).\n<em>The text2term tool to map free-text descriptions of biomedical terms to ontologies</em>.\narXiv: 2407.02626 [cs.DB].\nURL: <a href=\"https://arxiv.org/abs/2407.02626\">https://arxiv.org/abs/2407.02626</a>.</cite></p>\n\n<p><cite><a id='bib-ctvarx'></a><a href=\"#cite-ctvarx\">Zeileis, A. et al.</a>\n(2023).\n<em>CRAN Task Views: The Next Generation</em>.\narXiv: 2305.17573 [stat.CO].\nURL: <a href=\"https://arxiv.org/abs/2305.17573\">https://arxiv.org/abs/2305.17573</a>.</cite></p>\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}