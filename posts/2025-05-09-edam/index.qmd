---
title: "Tagging Bioconductor packages with EDAM"
description: |
  Adopting formal ontology for labeling Bioconductor software and data
author:
  - name: Vince Carey
    url: https://vjcitn.github.io/
    orcid: 0000-0003-4046-0063
date: 2025-05-06
creative_commons: CC BY
categories:
  - ontology
  - biocViews
  - EDAM
  - education
bibliography: "ctv.bib"
---

```{r bib, include=FALSE}
options(htmltools.dir.version = FALSE)
library(RefManageR)
library(bibtex)
bib <- ReadBib("ctv.bib")
BibOptions(
  longnamesfirst = FALSE,
  check.entries = FALSE,
  bib.style = "authoryear",
  cite.style = "authoryear",
  max.names = 1,
  style = "html",
  hyperlink = "to.bib",
  dashed = TRUE)
library(ctv)
av = available.views(repos="https://cran.rstudio.com/")
mvs = round(mean(sapply(av, function(x)nrow(x$packagelist))),1)
set.seed(213)
```

# Introduction

EDAM stands for "Embrace Data and Methods". The [EDAM ontology](https://edamontology.org) is used
to provide conceptual organization of resources
in major initiatives like [ELIXIR bio.tools](https://bio.tools/) and [Galaxy](https://f1000research.com/posters/6-1032).  

Bioconductor's methods and
data are tagged using an ad hoc terminologic hierarchy called [biocViews](https://www.bioconductor.org/packages/release/bioc/html/biocViews.html).

In 2023 a proposal to enhance discoverability of Bioconductor resources through
collaboration with EDAM's ontology developers
was funded through the Chan-Zuckerberg Initiatve Essential Open Source Software
program.  This blog post gives an update on the project.

# "Task views", starting with CRAN

[CRAN task views](https://cran.r-project.org/web/views) are a bonanza for practicing
data scientists.  Introduced in 2005, "[t]hey provide guidance about which CRAN packages 
are relevant for tasks related to a certain topic, and can also facilitate automatic 
installation of all corresponding packages (`r Citet(bib, "ctvarx")`).

### Exploring CRAN task views

But what is a "task view", and how can a task view do so much?  The current content
stack for CRAN task views lives in a [GitHub organization](https://github.com/cran-task-views).
The [ctv package](https://github.com/cran-task-views/ctv/) interrogates the
view collection so that we can compute 
  
- the number of views 
on `r Sys.Date()` to be `r length(av)`,
- a random
sample of view names (`r paste(sample(names(av), 5), collapse=", ")`),
and 
- the average number of packages per view (`r mvs`).

### Subviews


Each view is curated by a team and a narrative web page is compiled to
HTML.  We use [rvest](https://rvest.tidyverse.org/) to identify subtopics
of the Omics view: 
```{r lkrv,message=FALSE}
library(rvest)
read_html("https://cran.r-project.org/web/views/Omics.html") |> 
  html_elements("h3") |> html_text()
```
This approach can be used to learn the subtopics of any task view.

### Upshots

CRAN task views provide a vocabulary for organizing software packages
for data science, narrations of tasks addressed by various
packages, mechanisms for tagging packages for discovery through
view search, and protocols for adding new views and for adding
new packages to existing views.  See 
`r Citet(bib, "ctvarx")` for full details.

Of note: while CRAN hosts over 22,000 software packages, 
the number of packages assigned to some view at this time
is 4908. 

# biocViews: a graph is all you get

The [biocViews](https://bioconductor.org/packages/biocViews)
has a badge indicating that it has been in Bioconductor for 19
years.  Briefly, the intent was to emulate CRAN task views,
with a vocabulary and curation of packages
using topics relevant to genomic
data science.  Figure 1 gives a basic idea of the vocabulary
and its structure.  There are 497 terms in a directed
graph with root "BiocViews".

![Figure 1.  A "dot" layout of 20 nodes from the biocViewsVocab graph.](bcv20.png)
 
```{r dogra,eval=FALSE,include=FALSE}
library(graph)
library(biocViews)
data(biocViewsVocab)
nodes(biocViewsVocab)
ss = subGraph(nodes(biocViewsVocab)[1:20], biocViewsVocab)
graph.par(list(nodes = list(shape = "plaintext", cex = .6)))
gg = layoutGraph(ss, layoutType="dot")
renderGraph(gg)
```

The mapping from biocViews terms to packages is specified in each
package's DESCRIPTION file.  For a given release of Bioconductor,
the [BiocPkgTools](https://bioconductor.org/packages/BiocPkgTools)
includes the mapping from each package to the list of biocViews terms chosen by the package
developer to characterize package capabilities.  All packages
map to at least one term.  The average number of terms for
software packages is 9, and the maximum number of terms in use
for any package is 45, for [roastgsa](https://bioconductor.org/packages/roastgsa).

### Exploring biocViews

An R package, [biocEDAM](https://github.com/vjcitn/biocEDAM), under development
in GitHub, provides a shiny app for comprehensive exploration of
the biocViews vocabulary and its mapping to Bioconductor software,
annotation, experiment, and workflow packages.
Figure 2 provides a screenshot.  The app is available
for general use at [shinyapps.io](https://vjcitn.shinyapps.io/bvbrowse).

![Figure 2.  A view of the bvbrowse app with focus on packages mapped
to the biocViews term "DifferentialSplicing", which
is a kind of "BiologicalQuestion".](bvbr.png)

### Upshots

Motivated by CRAN task views, the biocViews vocabulary is deeply
entrenched in Bioconductor's operations.  Every package maps
to at least one term.  The mappings
given in DESCRIPTION files are used to sort contributions into
Software, Annotation, Experiment and Workflow classes.

Figure 2 shows the family of "biological questions"
addressed in the vocabulary.  This subvocabulary was
created in an _ad hoc_ matter, by request or perceived need.  The
most recent additions to the vocabulary appear to have
been made in 2023, involving the terms LongRead,
WorkflowManagement, and [Salmo_salar](https://github.com/Bioconductor/Organism.dplyr/issues/18).

Unfortunately, the original motivation of producing
curated and narrated topic-level documents in the manner of
CRAN task views, was never achieved.

# EDAM: Formal ontology for bioinformatics

## Views of the EDAM conceptual hierarchy

From [edamontology.org](https://edamontology.org):

> EDAM is a comprehensive ontology of well-established, familiar concepts that 
are prevalent within scientific data analysis and data management (both within 
and beyond life sciences and imaging). EDAM includes topics, operations, 
types of data and data identifiers, and data formats.

A taste of the conceptual network is given in Figure 3.  Visit [the data node](https://edamontology.github.io/edam-browser/#data_0006) to explore data types enumerated in the system.

![Figure 3.  A snapshot of an expansion of the interactive network viewer for EDAM.](edamslice.png)

## Comparing biocViews and EDAM

It is natural to expect that natural language processing tools would
help identify correspondences between the biocViews vocabulary and EDAM.
We used the text2term system `r Citet(bib, "gon2024")` to help identify
potential matches of terms using lexical and semantic analysis.
Figure 4 gives a slice of the outcome of this approach.  The top 3 scoring
terms in EDAM are provided for each term in biocViews.

![Figure 4.  Application of text2term to biocViews for scoring matches to the EDAM ontology.](sheetBiocVIews2EDAM.png)

The interpretation of this analysis is ongoing.  Figure 4 shows, for example, that the
biocViews term "SingleCell" can be mapped to topic, operation, data concepts in EDAM.
The biocViews term seems intended to address single cell sequencing, and perhaps it
should be replaced by EDAM topic 4028.  It is not clear that an adjudication and
replacement process of this sort could scale over the whole biocViews vocabulary,
but some direct or very near hits are observed, and may be useful to move the project
forward.

# References

```{r, results='asis', echo=FALSE}
PrintBibliography(bib)
```

